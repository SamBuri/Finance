 public boolean isValid() throws Exception {
        if (this.getPostStatus().equals(PostStatus.Posted)) {
            throw new Exception("The Journal Entry: " + journalEntry.getDisplayKey() + " is already posted. You can't continue");
        }
        return true;
    }

    public void post() throws Exception {
        entityManager = entityManagerFactory.createEntityManager();
        try {
            if (!isValid()) {
                return;
            }

            entityManager.getTransaction().begin();
            GeneralLedgerDA generalLedgerDA = new GeneralLedgerDA();
            this.journalEntry.getJournalEntryDetails().forEach((t) -> {
                entityManager.persist(generalLedgerDA.makeGeneralLedger(t));
            });
            this.setPostStatus(PostStatus.Posted);
            entityManager.merge(this.journalEntry);
            entityManager.getTransaction().commit();
        } catch (Exception e) {
            entityManager.getTransaction().rollback();
            throw e;
        } finally {
        }
    }