/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.controllers;

import com.saburi.common.controllers.EditController;
import com.saburi.common.dbaccess.OptionsDA;
import com.saburi.common.utils.CommonEnums.DataTypes;
import static com.saburi.common.utils.FXUIUtils.errorMessage;
import static com.saburi.common.utils.FXUIUtils.getSelectedValue;
import static com.saburi.common.utils.FXUIUtils.getText;
import static com.saburi.common.utils.FXUIUtils.message;
import static com.saburi.common.utils.FXUIUtils.warningOk;
import com.saburi.common.utils.Utilities;
import com.saburi.common.utils.Utilities.FormMode;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import javafx.scene.control.TextField;
import javafx.scene.control.ComboBox;
import javafx.collections.FXCollections;

public class OptionsController extends EditController {

    private final OptionsDA oOptionsDA = new OptionsDA();
    @FXML
    private TextField txtOptionID;
    @FXML
    private TextField txtOptionName;
    @FXML
    private ComboBox cboDataType;
    @FXML
    private TextField txtOptionValue;

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        try {
            cboDataType.setItems(FXCollections.observableArrayList(DataTypes.values()));
            this.primaryKeyControl = txtOptionID;
            this.dbAccess = oOptionsDA;
            this.restrainColumnConstraint = false;
            this.prefSize = 360;
        } catch (Exception e) {
            errorMessage(e);
        } finally {
        }
    }

    @Override
    protected void save() {
        try {
            String optionID = getText(txtOptionID, "Option ID");
            String optionName = getText(txtOptionName, "Option Name");
            DataTypes dataType = (DataTypes) getSelectedValue(cboDataType, "Data Type");
            String optionValue = getText(txtOptionValue, "Option Value");
            if(dataType.equals(DataTypes.NUMBER)){
              if(!Utilities.isDouble(optionValue)){
                  throw new Exception("You must enter a numeric value");
              }
            }
            
            if(dataType.equals(DataTypes.DATE)){
              if(!Utilities.isDate(optionValue)){
                  throw new Exception("You must enter a valid date value");
              }
            }
            
            if(dataType.equals(DataTypes.BOOLEAN)){
              if(!Utilities.isBoolean(optionValue)){
                  throw new Exception("You must enter true or false");
              }
            }
            

            OptionsDA optionsDA = new OptionsDA(optionID, optionName, dataType, optionValue);
            String buttonText = btnSave.getText();
            if (buttonText.equalsIgnoreCase(FormMode.Save.name())) {
                optionsDA.save();
                message("Saved Successfully");
                clear();
            } else if (buttonText.equalsIgnoreCase(FormMode.Update.name())) {
                optionsDA.update();
                message("Updated Successfully");
            }
            this.dbAccess = optionsDA;
        } catch (Exception e) {
            errorMessage(e);
        } finally {
        }
    }

    @Override
    protected void delete() {
        try {
            String optionID = getText(txtOptionID, "Option ID");
            OptionsDA optionsDA = oOptionsDA.get(optionID);
            if (!warningOk("Confirm Delete", "You are about to delete a record with ID: " + optionID + " Are you sure you want to continue?", "Remember this action cannot be un done")) {
                return;
            }
            if (optionsDA.delete()) {
                message("Deleted Successfully");
                this.clear();
            }
        } catch (Exception e) {
            errorMessage(e);
        }
    }

    @Override
    public void loadData() {
        try {
            String optionID = getText(txtOptionID, "Option ID");

            OptionsDA optionsDA = oOptionsDA.get(optionID);
            txtOptionID.setText(optionsDA.getOptionID());
            txtOptionName.setText(optionsDA.getOptionName());
            cboDataType.setValue(optionsDA.getDataType());
            txtOptionValue.setText(optionsDA.getOptionValue());

        } catch (Exception e) {
            errorMessage(e);
        }

    }

}
