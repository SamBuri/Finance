/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import com.saburi.common.entities.DBEntity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.validation.constraints.NotNull;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import com.saburi.common.entities.LookupData;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
@Table(
        uniqueConstraints = @UniqueConstraint(columnNames = {"itemID", "priceGroupID"}, name = "uqItemPriceGroup")
)
public class ItemPriceGroup extends DBEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(updatable = false, nullable = false)
    private int itemPriceGroupID;
    @NotNull(message = "The field: Item cannot be null")
    @OneToOne
    @JoinColumn(name = "itemID", foreignKey = @ForeignKey(name = "fkItemIDItemPriceGroup"))
    private Item item;
    @NotNull(message = "The field: Price Group cannot be null")
    @OneToOne
    @JoinColumn(name = "priceGroupID", foreignKey = @ForeignKey(name = "fkPriceGroupIDItemPriceGroup"))
    private LookupData priceGroup;
    @Column(name = "unitPrice")
    private double unitPrice;
    @Column(name = "discount")
    private double discount;

    public ItemPriceGroup() {
    }

    public ItemPriceGroup(int itemPriceGroupID, Item item, LookupData priceGroup, double unitPrice, double discount) {
        this.itemPriceGroupID = itemPriceGroupID;
        this.item = item;
        this.priceGroup = priceGroup;
        this.unitPrice = unitPrice;
        this.discount = discount;

    }

    public int getItemPriceGroupID() {
        return itemPriceGroupID;
    }

    public void setItemPriceGroupID(int itemPriceGroupID) {
        this.itemPriceGroupID = itemPriceGroupID;
    }

    public Item getItem() {
        return item;
    }

    public void setItem(Item item) {
        this.item = item;
    }

    public LookupData getPriceGroup() {
        return priceGroup;
    }

    public void setPriceGroup(LookupData priceGroup) {
        this.priceGroup = priceGroup;
    }

    public double getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(double unitPrice) {
        this.unitPrice = unitPrice;
    }

    public double getDiscount() {
        return discount;
    }

    public void setDiscount(double discount) {
        this.discount = discount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null) {
            return false;
        }
        if (getClass() != o.getClass()) {
            return false;
        }
        final ItemPriceGroup itemPriceGroup = (ItemPriceGroup) o;
        if (!Objects.equals(this.item, itemPriceGroup.item)) {
            return false;
        }
        return Objects.equals(this.priceGroup, itemPriceGroup.priceGroup);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.item) + Objects.hashCode(this.priceGroup);
    }

    @Override
    public Object getId() {
        return this.itemPriceGroupID;
    }

    @Override
    public String getDisplayKey() {
        return this.priceGroup.getDisplayKey();
    }

}
