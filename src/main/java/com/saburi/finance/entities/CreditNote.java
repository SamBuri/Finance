/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import com.saburi.finance.utils.FinanceEnums.ApprovalModes;
import javax.persistence.Enumerated;
import java.time.LocalDate;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class CreditNote extends DBEntity {

    @NotNull(message = "The field: Credit Note Approval cannot be null")
    @OneToOne
    @JoinColumn(name = "creditNoteApprovalID", foreignKey = @ForeignKey(name = "fkCreditNoteApprovalIDCreditNote"))
    private CreditNoteApproval creditNoteApproval;
    @Id
    @NotNull(message = "The field: Credit Note ID cannot be null")
    @Size(max = 20, message = "The field: Credit Note ID size cannot be greater than 20")
    @Column(length = 20, updatable = false)
    private String creditNoteID;
    @NotNull(message = "The field: ApprovalMode cannot be null")
    @Enumerated
    private ApprovalModes approvalMode;
    private LocalDate creditNoteDate;
    private double amount;
    @Size(max = 100, message = "The field: AmountWords size cannot be greater than 200")
    @Column(length = 200)
    private String amountWords;
    private double toRefundAmount;

    public CreditNote() {
    }

    public CreditNote(CreditNoteApproval creditNoteApproval, ApprovalModes approvalMode, LocalDate creditNoteDate, double amount, String amountWords) {
        this.creditNoteApproval = creditNoteApproval;
        this.creditNoteID = creditNoteApproval.getCreditNoteApprovalID();
        this.approvalMode = approvalMode;
        this.creditNoteDate = creditNoteDate;
        this.amount = amount;
        this.amountWords = amountWords;
    }

    public CreditNoteApproval getCreditNoteApproval() {
        return creditNoteApproval;
    }

    public void setCreditNoteApproval(CreditNoteApproval creditNoteApproval) {
        this.creditNoteApproval = creditNoteApproval;
    }

    public String getCreditNoteID() {
        return creditNoteID;
    }

    public void setCreditNoteID(String creditNoteID) {
        this.creditNoteID = creditNoteID;
    }

    public ApprovalModes getApprovalMode() {
        return approvalMode;
    }

    public void setApprovalMode(ApprovalModes approvalMode) {
        this.approvalMode = approvalMode;
    }

    public LocalDate getCreditNoteDate() {
        return creditNoteDate;
    }

    public void setCreditNoteDate(LocalDate creditNoteDate) {
        this.creditNoteDate = creditNoteDate;
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public String getAmountWords() {
        return amountWords;
    }

    public void setAmountWords(String amountWords) {
        this.amountWords = amountWords;
    }


    public double getToRefundAmount() {
        return toRefundAmount;
    }

    public void setToRefundAmount(double toRefundAmount) {
        this.toRefundAmount = toRefundAmount;
    }
    
    

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof CreditNote)) {
            return false;
        }

        CreditNote creditNote = (CreditNote) o;

        return this.getId().equals(creditNote.getId());
    }

    @Override
    public int hashCode() {
        return this.creditNoteID.hashCode();

    }

    @Override
    public Object getId() {
        return this.creditNoteID;
    }

    @Override
    public String getDisplayKey() {
        return this.creditNoteID;
    }

}
