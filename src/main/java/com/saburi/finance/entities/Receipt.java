/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import java.time.LocalDate;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import com.saburi.finance.utils.FinanceEnums.PayModes;
import javax.persistence.Enumerated;
import java.util.List;
import javax.persistence.CascadeType;
import java.util.ArrayList;
import javax.persistence.OneToMany;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class Receipt extends DBEntity {

    @Column(updatable = false)
    private int idHelper;
    @Id
    @NotNull(message = "The field: Receipt ID cannot be null")
    @Size(max = 20, message = "The field: Receipt ID size cannot be greater than 20")
    @Column(length = 20, updatable = false)
    private String receiptID;
    @NotNull(message = "The field: Receipt Date cannot be null")
    @Column(name = "receiptDate", nullable = false)
    private LocalDate receiptDate;
    @OneToOne
    @JoinColumn(name = "customerID", foreignKey = @ForeignKey(name = "fkCustomerIDReceipt"))
    private Customer customer;
    @Enumerated
    private PayModes payMode;
    @OneToOne
    @JoinColumn(name = "bankAcccountID", foreignKey = @ForeignKey(name = "fkBankAcccountIDReceipt"))
    private BankAccount bankAcccount;

    private double totalBill;
    private double amountTered;
    @OneToOne
    @JoinColumn(name = "currencyID", foreignKey = @ForeignKey(name = "fkCurrencyIDReceipt"))
    private Currency currency;
    private double exchangeRate;
    private double changeGiven;
    private double amountPaid;
    @Size(max = 200, message = "The field: Amount Words size cannot be greater than 200")
    @Column(length = 200)
    private String amountWords;
    private double AmountRefunded;
    @OneToMany(cascade = CascadeType.PERSIST)
    private List<ReceiptInvoice> receiptInvoices = new ArrayList<>();

    public Receipt() {
    }

    public Receipt(int idHelper, String receiptID, LocalDate receiptDate, Customer customer, PayModes payMode, BankAccount bankAccount, double totalBill, double amountTered, Currency currency, double exchangeRate, double changeGiven, double amountPaid, String amountWords) {
        this.idHelper = idHelper;
        this.receiptID = receiptID;
        this.receiptDate = receiptDate;
        this.customer = customer;
        this.payMode = payMode;
        this.bankAcccount = bankAccount;
        this.totalBill = totalBill;
        this.amountTered = amountTered;
        this.currency = currency;
        this.exchangeRate = exchangeRate;
        this.changeGiven = changeGiven;
        this.amountPaid = amountPaid;
        this.amountWords = amountWords;

    }

    public int getIdHelper() {
        return idHelper;
    }

    public void setIdHelper(int idHelper) {
        this.idHelper = idHelper;
    }

    public String getReceiptID() {
        return receiptID;
    }

    public void setReceiptID(String receiptID) {
        this.receiptID = receiptID;
    }

    public LocalDate getReceiptDate() {
        return receiptDate;
    }

    public void setReceiptDate(LocalDate receiptDate) {
        this.receiptDate = receiptDate;
    }

    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public PayModes getPayMode() {
        return payMode;
    }

    public void setPayMode(PayModes payMode) {
        this.payMode = payMode;
    }

    public BankAccount getBankAcccount() {
        return bankAcccount;
    }

    public void setBankAcccount(BankAccount bankAcccount) {
        this.bankAcccount = bankAcccount;
    }

    public double getTotalBill() {
        return totalBill;
    }

    public void setTotalBill(double totalBill) {
        this.totalBill = totalBill;
    }

    public double getAmountTered() {
        return amountTered;
    }

    public void setAmountTered(double amountTered) {
        this.amountTered = amountTered;
    }

    public Currency getCurrency() {
        return currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    public double getExchangeRate() {
        return exchangeRate;
    }

    public void setExchangeRate(double exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    public double getChangeGiven() {
        return changeGiven;
    }

    public void setChangeGiven(double changeGiven) {
        this.changeGiven = changeGiven;
    }

    public double getAmountPaid() {
        return amountPaid;
    }

    public void setAmountPaid(double amountPaid) {
        this.amountPaid = amountPaid;
    }

    public String getAmountWords() {
        return amountWords;
    }

    public void setAmountWords(String amountWords) {
        this.amountWords = amountWords;
    }

    public List<ReceiptInvoice> getReceiptInvoices() {
        return receiptInvoices;
    }

    public double getAmountRefunded() {
        return AmountRefunded;
    }

    public void setAmountRefunded(double AmountRefunded) {
        this.AmountRefunded = AmountRefunded;
    }

    public void setReceiptInvoices(List<ReceiptInvoice> receiptInvoices) {
        this.receiptInvoices = receiptInvoices;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Receipt)) {
            return false;
        }

        Receipt receipt = (Receipt) o;

        return this.getId().equals(receipt.getId());
    }

    @Override
    public int hashCode() {
        return this.receiptID.hashCode();

    }

    @Override
    public Object getId() {
        return this.receiptID;
    }

    @Override
    public String getDisplayKey() {
        return this.receiptID;
    }

}
