/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import javax.persistence.Column;
import javax.validation.constraints.Size;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class ReceiptInvoice extends DBEntity {

    @NotNull(message = "The field: Receipt cannot be null")
    @OneToOne
    @JoinColumn(name = "receiptID", foreignKey = @ForeignKey(name = "fkReceiptIDReceiptInvoice"))
    private Receipt receipt;
    @NotNull(message = "The field: Invoice cannot be null")
    @OneToOne
    @JoinColumn(name = "invoiceID", foreignKey = @ForeignKey(name = "fkInvoiceIDReceiptInvoice"))
    private Invoice invoice;
    @Id
    @NotNull(message = "The field: ReceiptInvoiceID cannot be null")
    @Size(max = 100, message = "The field: ReceiptInvoiceID size cannot be greater than 100")
    @Column(length = 100, updatable = false)
    private String receiptInvoiceID;
    private double amount;
    private double amountRefunded;

    public ReceiptInvoice() {
    }

    public ReceiptInvoice(Receipt receipt, Invoice invoice, String receiptInvoiceID, double amount) {
        this.receipt = receipt;
        this.invoice = invoice;
        this.receiptInvoiceID = receiptInvoiceID;
        this.amount = amount;

    }

    public Receipt getReceipt() {
        return receipt;
    }

    public void setReceipt(Receipt receipt) {
        this.receipt = receipt;
        setInvoiceDetailID();
    }

    public Invoice getInvoice() {
        return invoice;
    }

    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
        setInvoiceDetailID();
    }

    public String getReceiptInvoiceID() {
        return receiptInvoiceID;
    }

    private void setInvoiceDetailID() {
        String receiptPart = receipt == null ? "" : this.receipt.getReceiptID() == null ? "" : receipt.getReceiptID();
        String invoicePart = invoice == null ? "" : this.invoice.getInvoiceID() == null ? "" : invoice.getInvoiceID();

        this.receiptInvoiceID = receiptPart.concat(invoicePart);
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public double getAmountRefunded() {
        return amountRefunded;
    }

    public void setAmountRefunded(double amountRefunded) {
        this.amountRefunded = amountRefunded;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof ReceiptInvoice)) {
            return false;
        }

        ReceiptInvoice receiptInvoice = (ReceiptInvoice) o;

        return this.getId().equals(receiptInvoice.getId());
    }

    @Override
    public int hashCode() {
        return this.receiptInvoiceID.hashCode();

    }

    @Override
    public Object getId() {
        return this.receiptInvoiceID;
    }

    @Override
    public String getDisplayKey() {
        return this.receipt.getDisplayKey() + " " + this.invoice.getDisplayKey();
    }

}
