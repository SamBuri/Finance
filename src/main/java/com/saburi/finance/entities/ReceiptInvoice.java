/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import com.saburi.common.entities.DBEntity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.validation.constraints.NotNull;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
@Table(
        uniqueConstraints = @UniqueConstraint(columnNames = {"receiptID", "invoiceID"}, name = "uqReceiptInvoice")
)
public class ReceiptInvoice extends DBEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(updatable = false, nullable = false)
    private int receiptInvoiceID;
    @NotNull(message = "The field: Receipt cannot be null")
    @OneToOne
    @JoinColumn(name = "receiptID", foreignKey = @ForeignKey(name = "fkReceiptIDReceiptInvoice"))
    private Receipt receipt;
    @NotNull(message = "The field: Invoice cannot be null")
    @OneToOne
    @JoinColumn(name = "invoiceID", foreignKey = @ForeignKey(name = "fkInvoiceIDReceiptInvoice"))
    private Invoice invoice;
    @NotNull(message = "The field: Amount cannot be null")
    @Column(name = "amount", nullable = false)
    private double amount;
    @Column(name = "amountRefunded")
    private double amountRefunded;

    public ReceiptInvoice() {
    }

    public ReceiptInvoice(Receipt receipt, Invoice invoice, double amount, double amountRefunded) {
        this.receipt = receipt;
        this.invoice = invoice;
        this.amount = amount;
        this.amountRefunded = amountRefunded;

    }

    public int getReceiptInvoiceID() {
        return receiptInvoiceID;
    }

    public void setReceiptInvoiceID(int receiptInvoiceID) {
        this.receiptInvoiceID = receiptInvoiceID;
    }

    public Receipt getReceipt() {
        return receipt;
    }

    public void setReceipt(Receipt receipt) {
        this.receipt = receipt;
    }

    public Invoice getInvoice() {
        return invoice;
    }

    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public double getAmountRefunded() {
        return amountRefunded;
    }

    public void setAmountRefunded(double amountRefunded) {
        this.amountRefunded = amountRefunded;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null) {
            return false;
        }
        if (getClass() != o.getClass()) {
            return false;
        }
        final ReceiptInvoice receiptInvoice = (ReceiptInvoice) o;
        if (!Objects.equals(this.receipt, receiptInvoice.receipt)) {
            return false;
        }
        return Objects.equals(this.invoice, receiptInvoice.invoice);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.receipt) + Objects.hashCode(this.invoice);
    }

    @Override
    public Object getId() {
        return this.receiptInvoiceID;
    }

    @Override
    public String getDisplayKey() {
        return this.receipt.getDisplayKey() + " " + this.invoice.getDisplayKey();
    }

}
