/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import java.time.LocalDate;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import com.saburi.common.utils.CommonEnums.EntryModes;
import javax.persistence.Enumerated;
import java.util.List;
import javax.persistence.CascadeType;
import java.util.ArrayList;
import javax.persistence.OneToMany;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class SaleOrder extends DBEntity {

    @Column(updatable = false)
    private int idHelper;
    @Id
    @NotNull(message = "The field: Sale Order ID cannot be null")
    @Size(max = 20, message = "The field: Sale Order ID size cannot be greater than 20")
    @Column(length = 20, updatable = false)
    private String saleOrderID;
    private LocalDate orderDate;
    @Size(max = 200, message = "The field: Ship Address size cannot be greater than 200")
    @Column(length = 200)
    private String shipAddress;
    @OneToOne
    @JoinColumn(name = "sellToID", foreignKey = @ForeignKey(name = "fkSellToIDSaleOrder"))
    private Customer sellTo;
    @OneToOne
    @JoinColumn(name = "billToID", foreignKey = @ForeignKey(name = "fkBillToIDSaleOrder"))
    private Customer billTo;
    @OneToOne
    @JoinColumn(name = "currencyID", foreignKey = @ForeignKey(name = "fkCurrencyIDSaleOrder"))
    private Currency currency;
    @Enumerated
    private EntryModes entryMode;
    private double amount;
    @Size(max = 200, message = "The field: Amount Words size cannot be greater than 200")
    @Column(length = 200)
    private String amountWords;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "saleOrder")
    private List<SaleOrderDetail> saleOrderDetails = new ArrayList<>();

    public SaleOrder() {
    }

    public SaleOrder(int idHelper, String saleOrderID, LocalDate orderDate, String shipAddress, Customer sellTo, Customer billTo, Currency currency, EntryModes entryMode, double amount, String amountWords) {
        this.idHelper = idHelper;
        this.saleOrderID = saleOrderID;
        this.orderDate = orderDate;
        this.shipAddress = shipAddress;
        this.sellTo = sellTo;
        this.billTo = billTo;
        this.currency = currency;
        this.entryMode = entryMode;
        this.amount = amount;
        this.amountWords = amountWords;

    }

    public int getIdHelper() {
        return idHelper;
    }

    public void setIdHelper(int idHelper) {
        this.idHelper = idHelper;
    }

    public String getSaleOrderID() {
        return saleOrderID;
    }

    public void setSaleOrderID(String saleOrderID) {
        this.saleOrderID = saleOrderID;
    }

    public LocalDate getOrderDate() {
        return orderDate;
    }

    public void setOrderDate(LocalDate orderDate) {
        this.orderDate = orderDate;
    }

    public String getShipAddress() {
        return shipAddress;
    }

    public void setShipAddress(String shipAddress) {
        this.shipAddress = shipAddress;
    }

    public Customer getSellTo() {
        return sellTo;
    }

    public void setSellTo(Customer sellTo) {
        this.sellTo = sellTo;
    }

    public Customer getBillTo() {
        return billTo;
    }

    public void setBillTo(Customer billTo) {
        this.billTo = billTo;
    }

    public Currency getCurrency() {
        return currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    public EntryModes getEntryMode() {
        return entryMode;
    }

    public void setEntryMode(EntryModes entryMode) {
        this.entryMode = entryMode;
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public String getAmountWords() {
        return amountWords;
    }

    public void setAmountWords(String amountWords) {
        this.amountWords = amountWords;
    }

    public List<SaleOrderDetail> getSaleOrderDetails() {
        return saleOrderDetails;
    }

    public void setSaleOrderDetails(List<SaleOrderDetail> saleOrderDetails) {
        this.saleOrderDetails = saleOrderDetails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof SaleOrder)) {
            return false;
        }

        SaleOrder saleOrder = (SaleOrder) o;

        return this.getId().equals(saleOrder.getId());
    }

    @Override
    public int hashCode() {
        return this.saleOrderID.hashCode();

    }

    @Override
    public Object getId() {
        return this.saleOrderID;
    }

    @Override
    public String getDisplayKey() {
        return this.saleOrderID;
    }

}
