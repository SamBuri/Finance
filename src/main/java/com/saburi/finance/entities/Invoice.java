/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import java.time.LocalDate;
import com.saburi.finance.utils.FinanceEnums.InvoiceTypes;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import java.util.List;
import javax.persistence.CascadeType;
import java.util.ArrayList;
import javax.persistence.OneToMany;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class Invoice extends DBEntity {

    @Column(updatable = false)
    private int idHelper;
    @Id
    @NotNull(message = "The field: Invoice ID cannot be null")
    @Size(max = 20, message = "The field: Invoice ID size cannot be greater than 20")
    @Column(length = 20, updatable = false)
    private String invoiceID;
    @Column(updatable = false)
    private LocalDate invoiceDate;
    @Enumerated
    private InvoiceTypes invoiceType;
    @OneToOne
    @JoinColumn(name = "billToID", foreignKey = @ForeignKey(name = "fkBillToIDInvoice"))
    private Customer billTo;
    private double amount;
    private double amountPaid;
    @Column(updatable = false)
    private double originalAmount;
    @Size(max = 200, message = "The field: Amount Words size cannot be greater than 200")
    @Column(length = 200)
    private String amountWords;
    private double amountRefunded;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "invoice")
    private List<InvoiceDetails> invoiceDetails = new ArrayList<>();

    public Invoice() {
    }

    public Invoice(int idHelper, String invoiceID, LocalDate invoiceDate, InvoiceTypes invoiceType, Customer billTo, double amount, String amountWords) {
        this.idHelper = idHelper;
        this.invoiceID = invoiceID;
        this.invoiceDate = invoiceDate;
        this.invoiceType = invoiceType;
        this.billTo = billTo;
        this.amount = amount;
        this.originalAmount = amount;
        this.amountWords = amountWords;

    }

    public int getIdHelper() {
        return idHelper;
    }

    public void setIdHelper(int idHelper) {
        this.idHelper = idHelper;
    }

    public String getInvoiceID() {
        return invoiceID;
    }

    public void setInvoiceID(String invoiceID) {
        this.invoiceID = invoiceID;
    }

    public LocalDate getInvoiceDate() {
        return invoiceDate;
    }

    public void setInvoiceDate(LocalDate invoiceDate) {
        this.invoiceDate = invoiceDate;
    }

    public InvoiceTypes getInvoiceType() {
        return invoiceType;
    }

    public void setInvoiceType(InvoiceTypes invoiceType) {
        this.invoiceType = invoiceType;
    }

    public Customer getBillTo() {
        return billTo;
    }

    public void setBillTo(Customer billTo) {
        this.billTo = billTo;
    }

    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public String getAmountWords() {
        return amountWords;
    }

    public void setAmountWords(String amountWords) {
        this.amountWords = amountWords;
    }

    public double getAmountPaid() {
        return amountPaid;
    }

    public void setAmountPaid(double amountPaid) {
        this.amountPaid = amountPaid;
    }

    public double getOriginalAmount() {
        return originalAmount;
    }

    public void setOriginalAmount(double originalAmount) {
        this.originalAmount = originalAmount;
    }

    public double getAmountRefunded() {
        return amountRefunded;
    }

    public void setAmountRefunded(double amountRefunded) {
        this.amountRefunded = amountRefunded;
    }

    public List<InvoiceDetails> getInvoiceDetails() {
        return invoiceDetails;
    }

    public void setInvoiceDetails(List<InvoiceDetails> invoiceDetails) {
        this.invoiceDetails = invoiceDetails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Invoice)) {
            return false;
        }

        Invoice invoice = (Invoice) o;

        return this.getId().equals(invoice.getId());
    }

    @Override
    public int hashCode() {
        return this.invoiceID.hashCode();

    }

    @Override
    public Object getId() {
        return this.invoiceID;
    }

    @Override
    public String getDisplayKey() {
        return this.invoiceID;
    }

}
