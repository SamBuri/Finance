/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.finance.entities;

import com.saburi.common.entities.DBEntity;
import com.saburi.common.entities.LookupData;
import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import javax.validation.constraints.Email;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class Vendor extends DBEntity {

    @Column(updatable = false)
    private int idHelper;
    @Id
    @NotNull(message = "The field: Vendor ID cannot be null")
    @Size(max = 20, message = "The field: Vendor ID size cannot be greater than 20")
    @Column(length = 20, updatable = false)
    private String vendorID;
    @Size(max = 100, message = "The field: Vendor Name size cannot be greater than 100")
    @NotNull(message = "The field: Vendor Name cannot be null")
    @Column(length = 100)
    private String vendorName;
    @OneToOne
    @JoinColumn(name = "vendorCategoryID", foreignKey = @ForeignKey(name = "fkVendorCategoryIDVendor"))
    private LookupData vendorCategory;
    @Size(max = 100, message = "The field: PhoneNo size cannot be greater than 100")
    @Column(length = 100)
    private String phoneNo;
    @Email(message = "Invalid email: ${validatedValue}")
    @Size(max = 100, message = "The field: Email size cannot be greater than 100")
    @Column(length = 100)
    private String email;
    @Size(max = 200, message = "The field: Address size cannot be greater than 200")
    @Column(length = 200)
    private String address;
    @OneToOne
    @JoinColumn(name = "priceGroupID", foreignKey = @ForeignKey(name = "fkPriceGroupIDVendor"))
    private LookupData priceGroup;
    @OneToOne
    @JoinColumn(name = "vendorPostingGroupID", foreignKey = @ForeignKey(name = "fkVendorPostingGroupIDVendor"))
    private VendorPostingGroup vendorPostingGroup;
    @OneToOne
    @JoinColumn(name = "businessGroupID", foreignKey = @ForeignKey(name = "fkBusinessGroupIDVendor"))
    private LookupData businessGroup;
    @OneToOne
    @JoinColumn(name = "vATBusinessGroupID", foreignKey = @ForeignKey(name = "fkVATBusinessGroupIDVendor"))
    private LookupData vATBusinessGroup;
    private double balance;

    public Vendor() {
    }
    
    public Vendor(int idHelper, String vendorID, String vendorName, LookupData vendorCategory, String phoneNo, String email, String address, LookupData priceGroup, VendorPostingGroup vendorPostingGroup, LookupData businessGroup, LookupData vATBusinessGroup) {
        this.idHelper = idHelper;
        this.vendorID = vendorID;
        this.vendorName = vendorName;
        this.vendorCategory = vendorCategory;
        this.phoneNo = phoneNo;
        this.email = email;
        this.address = address;
        this.priceGroup = priceGroup;
        this.vendorPostingGroup = vendorPostingGroup;
        this.businessGroup = businessGroup;
        this.vATBusinessGroup = vATBusinessGroup;

    }

    public Vendor(int idHelper, String vendorID, String vendorName, LookupData vendorCategory, String phoneNo, String email, String address, LookupData priceGroup, VendorPostingGroup vendorPostingGroup, LookupData businessGroup, LookupData vATBusinessGroup, double balance) {
        this.idHelper = idHelper;
        this.vendorID = vendorID;
        this.vendorName = vendorName;
        this.vendorCategory = vendorCategory;
        this.phoneNo = phoneNo;
        this.email = email;
        this.address = address;
        this.priceGroup = priceGroup;
        this.vendorPostingGroup = vendorPostingGroup;
        this.businessGroup = businessGroup;
        this.vATBusinessGroup = vATBusinessGroup;
        this.balance = balance;

    }

    public int getIdHelper() {
        return idHelper;
    }

    public void setIdHelper(int idHelper) {
        this.idHelper = idHelper;
    }

    public String getVendorID() {
        return vendorID;
    }

    public void setVendorID(String vendorID) {
        this.vendorID = vendorID;
    }

    public String getVendorName() {
        return vendorName;
    }

    public void setVendorName(String vendorName) {
        this.vendorName = vendorName;
    }

    public LookupData getVendorCategory() {
        return vendorCategory;
    }

    public void setVendorCategory(LookupData vendorCategory) {
        this.vendorCategory = vendorCategory;
    }

    public String getPhoneNo() {
        return phoneNo;
    }

    public void setPhoneNo(String phoneNo) {
        this.phoneNo = phoneNo;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public LookupData getPriceGroup() {
        return priceGroup;
    }

    public void setPriceGroup(LookupData priceGroup) {
        this.priceGroup = priceGroup;
    }

    public VendorPostingGroup getVendorPostingGroup() {
        return vendorPostingGroup;
    }

    public void setVendorPostingGroup(VendorPostingGroup vendorPostingGroup) {
        this.vendorPostingGroup = vendorPostingGroup;
    }

    public LookupData getBusinessGroup() {
        return businessGroup;
    }

    public void setBusinessGroup(LookupData businessGroup) {
        this.businessGroup = businessGroup;
    }

    public LookupData getVATBusinessGroup() {
        return vATBusinessGroup;
    }

    public void setVATBusinessGroup(LookupData vATBusinessGroup) {
        this.vATBusinessGroup = vATBusinessGroup;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Vendor)) {
            return false;
        }

        Vendor vendor = (Vendor) o;

        return this.getId().equals(vendor.getId());
    }

    @Override
    public int hashCode() {
        return this.vendorID.hashCode();

    }

    @Override
    public Object getId() {
        return this.vendorID;
    }

    @Override
    public String getDisplayKey() {
        return this.vendorName;
    }

}
